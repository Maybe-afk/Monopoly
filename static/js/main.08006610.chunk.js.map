{"version":3,"sources":["components/FormUserDetails.js","components/FormPersonalDetails.js","components/Confirm.js","components/Success.js","components/UserForm.js","App.js","serviceWorker.js","index.js"],"names":["FormUserDetails","continue","e","preventDefault","props","nextStep","this","values","handleChange","Dialog","open","fullWidth","maxWidth","AppBar","title","TextField","placeholder","label","onChange","defaultValue","name","margin","colour","price","Button","color","variant","onClick","Component","FormPersonalDetails","back","prevStep","housecount","house_price","hotel_price","Confirm","List","ListItem","ListItemAvatar","Avatar","ListItemText","primary","secondary","Success","UserForm","state","step","setState","input","target","value","console","log","App","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.08006610.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\n\nexport class FormUserDetails extends Component {\n  continue = e => {\n    e.preventDefault();\n    this.props.nextStep();\n  };\n\n  render() {\n    const { values, handleChange } = this.props;\n    return (\n      <MuiThemeProvider>\n        <>\n          <Dialog\n            open\n            fullWidth\n            maxWidth='sm'\n          >\n            <AppBar title=\"Gracz\" />\n            <TextField\n              placeholder=\"Podaj nazwe pola\"\n              label=\"Nazwa pola\"\n              onChange={handleChange('name')}\n              defaultValue={values.name}\n              margin=\"normal\"\n              fullWidth\n            />\n            <br />\n            <TextField\n              placeholder=\"Podaj kolor\"\n              label=\"Podaj kolor\"\n              onChange={handleChange('colour')}\n              defaultValue={values.colour}\n              margin=\"normal\"\n              fullWidth\n            />\n            <br />\n            <TextField\n              placeholder=\"Podaj cene\"\n              label=\"Podaj cene\"\n              onChange={handleChange('price')}\n              defaultValue={values.price}\n              margin=\"normal\"\n              fullWidth\n            />\n            <br />\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={this.continue}\n            >Dalej</Button>\n          </Dialog>\n        </>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default FormUserDetails;\n","import React, { Component } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nexport class FormPersonalDetails extends Component {\n  continue = e => {\n    e.preventDefault();\n    this.props.nextStep();\n  };\n\n  back = e => {\n    e.preventDefault();\n    this.props.prevStep();\n  };\n\n  render() {\n    const { values, handleChange } = this.props;\n    return (\n      <MuiThemeProvider>\n        <>\n          <Dialog\n            open\n            fullWidth\n            maxWidth='sm'\n          >\n            <AppBar title=\"Budynki\" />\n            <TextField\n              placeholder=\"Podaj ilość domów\"\n              label=\"Podaj ilość domów\"\n              onChange={handleChange('housecount')}\n              defaultValue={values.housecount}\n              margin=\"normal\"\n              fullWidth\n            />\n            <br />\n            <TextField\n              placeholder=\"Podaj cene za dom\"\n              label=\"Podaj cene za dom\"\n              onChange={handleChange('house_price')}\n              defaultValue={values.house_price}\n              margin=\"normal\"\n              fullWidth\n            />\n            <br />\n            <TextField\n              placeholder=\"Podaj cene za hotel\"\n              label=\"Podaj cene za hotel\"\n              onChange={handleChange('hotel_price')}\n              defaultValue={values.hotel_price}\n              margin=\"normal\"\n              fullWidth\n            />\n            <br />\n\n            <Button\n              color=\"secondary\"\n              variant=\"contained\"\n              onClick={this.back}\n            >Powrót</Button>\n\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={this.continue}\n            >Dalej</Button>\n          </Dialog>\n        </>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default FormPersonalDetails;\n","import React, { Component } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\nimport { List, ListItem, ListItemText  } from '@material-ui/core/';\nimport Button from '@material-ui/core/Button';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport EuroIcon from '@material-ui/icons/Euro';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\nimport DehazeIcon from '@material-ui/icons/Dehaze';\nimport HomeIcon from '@material-ui/icons/Home';\nimport HouseIcon from '@material-ui/icons/House';\n\n\nexport class Confirm extends Component {\n  continue = e => {\n    e.preventDefault();\n    // PROCESS FORM //\n    this.props.nextStep();\n  };\n\n  back = e => {\n    e.preventDefault();\n    this.props.prevStep();\n  };\n\n  render() {\n    const {\n      values: { name, colour, price, housecount, house_price, hotel_price }\n    } = this.props;\n    return (\n      <MuiThemeProvider>\n        <>\n          <Dialog\n            open\n            fullWidth\n            maxWidth='sm'\n          >\n            <AppBar title=\"Confirm User Data\" />\n            <List>\n            \n              <ListItem >\n              <ListItemAvatar>\n          <Avatar>\n            <AssignmentIcon />\n          </Avatar>\n        </ListItemAvatar>\n                <ListItemText primary=\"Nazwa pola\" secondary={name} />\n              </ListItem>\n              <ListItem>\n              <ListItemAvatar>\n          <Avatar>\n            <InvertColorsIcon />\n          </Avatar>\n        </ListItemAvatar>\n                <ListItemText primary=\"Kolor\" secondary={colour} />\n              </ListItem >\n              <ListItem>\n              <ListItemAvatar>\n          <Avatar>\n            <EuroIcon />\n          </Avatar>\n        </ListItemAvatar>\n                <ListItemText primary=\"Cena\" secondary={price} />\n              </ListItem >\n              <ListItem>\n              <ListItemAvatar>\n          <Avatar>\n            <DehazeIcon />\n          </Avatar>\n        </ListItemAvatar>\n                <ListItemText primary=\"Ilosc domów\" secondary={housecount} />\n              </ListItem >\n              <ListItem>\n              <ListItemAvatar>\n          <Avatar>\n            <HomeIcon />\n          </Avatar>\n        </ListItemAvatar>\n                <ListItemText primary=\"Cena za dom\" secondary={house_price} />\n              </ListItem >\n              <ListItem>\n              <ListItemAvatar>\n          <Avatar>\n            <HouseIcon />\n          </Avatar>\n        </ListItemAvatar>\n                <ListItemText primary=\"Cena za hotel\" secondary={hotel_price} />\n              </ListItem >\n            </List>\n            <br />\n\n            <Button\n              color=\"secondary\"\n              variant=\"contained\"\n              onClick={this.back}\n            >Powrót</Button>\n\n           \n          </Dialog>\n        </>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default Confirm;\n","import React, { Component } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\n\nexport class Success extends Component {\n  continue = e => {\n    e.preventDefault();\n    // PROCESS FORM //\n    this.props.nextStep();\n  };\n\n  back = e => {\n    e.preventDefault();\n    this.props.prevStep();\n  };\n\n  render() {\n    return (\n      <MuiThemeProvider>\n        <>\n          <Dialog\n            open\n            fullWidth\n            maxWidth='sm'\n          >\n            <AppBar title=\"Success\" />\n            <h1>Właśnie wyrenderowałeś swoją wirtualną kartę</h1>\n            <p>Czy chcesz zacząć ponownie ?</p>\n           \n          </Dialog>\n          \n        </>\n\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default Success;\n","import React, { Component } from 'react';\nimport FormUserDetails from './FormUserDetails';\nimport FormPersonalDetails from './FormPersonalDetails';\nimport Confirm from './Confirm';\nimport Success from './Success';\n\nexport class UserForm extends Component {\n  state = {\n    step: 1,\n    name: '',\n    colour: '',\n    price: '',\n    housecount: '',\n    house_price: '',\n    hotel_price: ''\n  };\n\n  // Proceed to next step\n  nextStep = () => {\n    const { step } = this.state;\n    this.setState({\n      step: step + 1\n    });\n  };\n\n  // Go back to prev step\n  prevStep = () => {\n    const { step } = this.state;\n    this.setState({\n      step: step - 1\n    });\n  };\n\n  // Handle fields change\n  handleChange = input => e => {\n    this.setState({ [input]: e.target.value });\n  };\n\n  render() {\n    const { step } = this.state;\n    const { name, colour, price, housecount, house_price, hotel_price } = this.state;\n    const values = { name, colour, price, housecount, house_price, hotel_price };\n\n    switch (step) {\n      case 1:\n        return (\n          <FormUserDetails\n            nextStep={this.nextStep}\n            handleChange={this.handleChange}\n            values={values}\n          />\n        );\n      case 2:\n        return (\n          <FormPersonalDetails\n            nextStep={this.nextStep}\n            prevStep={this.prevStep}\n            handleChange={this.handleChange}\n            values={values}\n          />\n        );\n      case 3:\n        return (\n          <Confirm\n            nextStep={this.nextStep}\n            prevStep={this.prevStep}\n            values={values}\n          />\n        );\n      case 4:\n        return <Success />;\n      default:\n        (console.log(''))\n    }\n  }\n}\n\nexport default UserForm;\n","import React from 'react';\nimport { UserForm } from './components/UserForm';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <UserForm />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}